<launch>
  <arg name="x_pos" default="-2.0"/>
  <arg name="y_pos" default="-0.5"/>
  <arg name="z_pos" default="0.0"/>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find picarx_gazebo)/worlds/picarx.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="true"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  
  <param name="robot_description" command="xacro '$(find picarx_description)/urdf/picarx/picarx.urdf'" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-param robot_description -urdf -model picarx" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find picarx_description)/config/picarx_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/picarx" args="joint1_position_controller joint2_position_controller steering_servo_position_controller joint_state_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/picarx/joint_states" />
  </node>
  
</launch>